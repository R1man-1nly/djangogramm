version: '1.1'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: yourdbname2
      POSTGRES_USER: youruser2
      POSTGRES_PASSWORD: yourpass2
    ports:
      - "5432:5432"
    networks:
      - prediction-network

  prediction:
    build:
      context: .
    container_name: djangogramm
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - prediction-network
    environment:
      - POSTGRES_USER=youruser2
      - POSTGRES_PASSWORD=yourpass2
      - POSTGRES_DB=yourdbname2
      - DB_HOST=postgres
      - DB_PORT=5432
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
#    command: sh -c "sleep 5 && python manage.py migrate && python manage.py shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='root').exists() or User.objects.create_superuser('root', 'root@example.com', 'root')" && python manage.py create_fake_fill_db && gunicorn djangogramm.wsgi:application --bind 0.0.0.0:8000 --log-level info"
#    command: sh -c "gunicorn djangogramm.wsgi:application --bind 0.0.0.0:8000 --log-level info"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static
      - media_volume:/media
    ports:
      - "80:80"
    depends_on:
      - prediction
    networks:
      - prediction-network

#  pgadmin:
#    image: dpage/pgadmin4:latest
#    depends_on:
#      - postgres
#    networks:
#      - prediction-network
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=youruser2@ggmail.com
#      - PGADMIN_DEFAULT_PASSWORD=yourpass2 # если сменить здесь, то нужно удалить контентер
#      - PGADMIN_LISTEN_ADDRESS=0.0.0.0 # чтобы не было косяков с nginx лушче в одну сеть с app
#      - PGADMIN_LISTEN_PORT=5555
#    ports:
#      - "5555:5555"

volumes:
  static_volume:
  media_volume:

networks:
  prediction-network:
    driver: bridge